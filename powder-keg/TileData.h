#pragma once
#include <cstdint>

namespace blit {
	struct Point;
}

struct TileData
{
    uint8_t id = 0;
    uint16_t index = 0;
    bool canMove = true;
    uint16_t pixels_in_water = 0;
    bool in_water = false;
    float movement_modifier = 0;
    float life_modifier = 0;
};

TileData getLocalTileData(const blit::Point& Point_to_check, uint8_t tile_size, uint8_t tile_map_width);

static uint8_t layer_world[] = {
        48, 50, 51, 50, 49, 50, 51, 50, 49, 51, 50, 51, 50, 49, 51, 50, 51, 49, 50, 52, 00, 00, 00, 00, 00, 00, 26, 27,
        28, 29, 30, 52,
        64, 37, 66, 66, 66, 01, 01, 01, 01, 66, 66, 66, 66, 66, 01, 01, 66, 66, 66, 68, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00,
        64, 65, 01, 01, 01, 01, 01, 01, 01, 66, 66, 66, 66, 66, 01, 01, 01, 01, 37, 68, 00, 00, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65,
        64, 01, 36, 36, 36, 36, 65, 66, 66, 65, 66, 66, 66, 66, 36, 36, 36, 36, 01, 68, 00, 00, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65,
        64, 01, 36, 01, 01, 01, 65, 66, 66, 66, 66, 66, 66, 66, 01, 01, 01, 36, 01, 68, 00, 00, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65,
        64, 01, 66, 01, 66, 01, 66, 36, 36, 66, 66, 36, 36, 66, 01, 65, 01, 66, 01, 68, 00, 00, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65,
        64, 01, 66, 01, 38, 01, 66, 36, 66, 66, 66, 66, 36, 66, 01, 66, 01, 66, 01, 68, 00, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65,
        64, 01, 66, 01, 65, 01, 66, 66, 66, 66, 65, 66, 66, 66, 01, 66, 01, 66, 01, 68, 00, 65, 66, 65, 65, 65, 65, 65,
        65, 65, 65, 65,
        64, 01, 66, 01, 66, 01, 66, 36, 66, 66, 66, 66, 36, 66, 01, 66, 01, 66, 01, 68, 00, 66, 66, 66, 66, 66, 66, 66,
        66, 66, 66, 66,
        64, 01, 66, 01, 35, 01, 66, 36, 36, 66, 66, 36, 36, 66, 01, 65, 01, 66, 01, 68, 00, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65,
        64, 01, 36, 01, 01, 01, 66, 66, 66, 66, 66, 66, 66, 66, 01, 01, 01, 36, 01, 68, 00, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65,
        64, 01, 36, 36, 36, 36, 65, 66, 66, 66, 66, 66, 66, 66, 36, 36, 36, 36, 01, 68, 00, 65, 65, 65, 65, 65, 65, 65,
        65, 65, 65, 65,
        64, 66, 01, 01, 01, 01, 01, 66, 66, 66, 66, 66, 66, 66, 01, 01, 01, 01, 66, 68, 00, 65, 65, 65, 66, 65, 65, 65,
        65, 65, 65, 65,
        64, 66, 66, 66, 66, 01, 01, 01, 01, 66, 66, 66, 66, 66, 01, 66, 66, 66, 66, 68, 00, 65, 65, 65, 66, 65, 65, 65,
        65, 65, 65, 65,
        80, 81, 82, 83, 82, 81, 82, 83, 81, 82, 83, 81, 82, 83, 81, 82, 83, 81, 82, 84, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00,
        00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00, 00,
        00, 00, 00, 00,
};

